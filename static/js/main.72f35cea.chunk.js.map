{"version":3,"sources":["components/Book.js","BooksAPI.js","components/Search.js","components/Shelf.js","components/Main.js","App.js","index.js"],"names":["Book","_this","this","thumbnail","props","book","imageLinks","_this$props","selectedShelf","_this$props$book","title","authors","react_default","a","createElement","className","style","width","height","backgroundImage","concat","value","onChange","event","moveToShelf","target","disabled","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchPage","state","booksSearch","noSearch","updateQuery","setState","updateBooksSearch","BooksAPI","error","_this2","booksList","Link","to","type","placeholder","map","bookShelf","key","components_Book","Shelf","bookList","Fragment","filter","MainPage","components_Shelf","BooksApp","_this3","Route","exact","path","render","Main","Search","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.72f35cea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Book extends Component {\r\n  render() {\r\n    let thumbnail = this.props.book.imageLinks\r\n      ? this.props.book.imageLinks.thumbnail\r\n      : '';\r\n    let { book, selectedShelf } = this.props;\r\n    let { title, authors } = this.props.book;\r\n    return (\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(\"${thumbnail}\")`\r\n            }}\r\n          />\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n              value={selectedShelf}\r\n              onChange={event =>\r\n                this.props.moveToShelf(book, event.target.value)\r\n              }\r\n            >\r\n              <option value=\"move\" disabled>\r\n                Move to...\r\n              </option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{title}</div>\r\n        <div className=\"book-authors\">{authors}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Book from './Book';\r\nimport * as BooksAPI from '../BooksAPI';\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    query: '',\r\n    booksSearch: [],\r\n    noSearch: false\r\n  };\r\n\r\n  updateQuery = query => {\r\n    this.setState({\r\n      query: query\r\n    });\r\n    this.updateBooksSearch(query);\r\n  };\r\n\r\n  updateBooksSearch = query => {\r\n    if (query) {\r\n      BooksAPI.search(query).then(booksSearch => {\r\n        if (query === this.state.query) {\r\n          if (booksSearch.error) {\r\n            this.setState({ booksSearch: [], noSearch: true});\r\n          } else {\r\n            this.setState({ booksSearch: booksSearch, noSearch: false });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({ booksSearch: [], noSearch: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const classes = `close-search btn`;\r\n    let { booksList, moveToShelf } = this.props;\r\n    let { noSearch } = this.state;\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className={classes} to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n              onChange={event => this.updateQuery(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {this.state.booksSearch.map(booksSearch => {\r\n              let bookShelf = 'none';\r\n              booksList.map(book =>\r\n                book.id === booksSearch.id ? (bookShelf = book.shelf) : ''\r\n              );\r\n              return (\r\n                <li key={booksSearch.id}>\r\n                  <Book\r\n                    book={booksSearch}\r\n                    moveToShelf={moveToShelf}\r\n                    selectedShelf={bookShelf}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          {noSearch && (\r\n            <h3>Your search did not return any books. Please, try again!</h3>\r\n          )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport Book from './Book';\r\n\r\nconst Shelf = props => {\r\n  const { bookList, moveToShelf } = props;\r\n  return (\r\n    <>\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {bookList\r\n              .filter(book => book.shelf === 'currentlyReading')\r\n              .map(book => (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    book={book}\r\n                    moveToShelf={moveToShelf}\r\n                    selectedShelf=\"currentlyReading\"\r\n                  />\r\n                </li>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {bookList\r\n              .filter(book => book.shelf === 'wantToRead')\r\n              .map(book => (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    book={book}\r\n                    moveToShelf={moveToShelf}\r\n                    selectedShelf=\"wantToRead\"\r\n                  />\r\n                </li>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">Read</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {bookList\r\n              .filter(book => book.shelf === 'read')\r\n              .map(book => (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    book={book}\r\n                    moveToShelf={moveToShelf}\r\n                    selectedShelf=\"read\"\r\n                  />\r\n                </li>\r\n              ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shelf;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Shelf from './Shelf';\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <Shelf\r\n              bookList={this.props.booksList}\r\n              moveToShelf={this.props.moveToShelf}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"open-search\">\r\n          <Link className=\"button\" to=\"/search\">\r\n            Add a book\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport SearchPage from './components/Search';\r\nimport MainPage from './components/Main';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css';\r\n\r\nclass BooksApp extends React.Component {\r\n  /**\r\n   * TODO: Instead of using this state variable to keep track of which page\r\n   * we're on, use the URL in the browser's address bar. This will ensure that\r\n   * users can use the browser's back and forward buttons to navigate between\r\n   * pages, as well as provide a good URL they can bookmark and share.\r\n   */\r\n  state = {\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books: books });\r\n    });\r\n  }\r\n\r\n  moveToShelf = (book, shelf) => {\r\n    BooksAPI.update(book, shelf);\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books: books });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <MainPage\r\n              booksList={this.state.books}\r\n              moveToShelf={this.moveToShelf}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/search\"\r\n          render={() => (\r\n            <SearchPage\r\n              booksList={this.state.books}\r\n              moveToShelf={this.moveToShelf}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}